let命令
(1)为js提供了块级作用域{}
(2)在同一个作用域不能重复声明
(3)声明不会被提前

const
(1)与let一样,有块级作用域,同一个作用域中不能重复声明,声明不会被提前
(2)声明的是只读的常量,只能在声明时赋值一次

变量的解构赋值
(1)数组的解构赋值: 通过将数组的索引与变量位置匹配
(2)对象的解构赋值: 将对象的属性名称与变量名匹配
(3)函数参数的解构赋值: 同数组和对象的解构赋值

思考:
let a=1, b=2;
交换两个变量a,b的值
[a, b] = [b, a]

函数的扩展
(1)参数使用默认值,应该作为尾参数
(2)rest参数( ...参数名称),替代arguments对象
(3)函数的属性 length, name
(4)箭头函数(简洁),去掉function,在()与{}加=>
通常作为回调函数,其中this的指向是固定的,指向外部环境中的this



